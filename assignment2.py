# -*- coding: utf-8 -*-
"""Assignment2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q78kLgz6AVSkVACj7VGJzdYuFAOFy1gB

Nisarga H R

Assignment 2

Part 1: Lists

1. Create and Access Elements:

o Create a list of 5 fruits.

o Access the second and fourth fruit in the list and print them.
"""

fruits = ['apple', 'banana', 'cherry', 'orange', 'strawberry']
second_fruit = fruits[1]
print("Second fruit:", second_fruit)
fourth_fruit = fruits[3]
print("Fourth fruit:", fourth_fruit)

"""2. Modify a List:

o Add a new fruit to the list.

o Replace the third fruit in the list with "Strawberry."

o Remove the last fruit from the list.
"""

fruits = ['apple', 'banana', 'cherry', 'orange', 'mango']
print("Original list:", fruits)
fruits.append('pomegranate')
print("List after adding a new fruit:", fruits)
fruits[2] = 'strawberry'
print("List after replacing the third fruit:", fruits)
fruits.pop()
print("List after removing the last fruit:", fruits)

"""3. List Methods:

o Sort the list alphabetically.

o Reverse the order of the list.

o Count how many times "Apple" appears in the list (add "Apple" if necessary).
"""

fruits = ['apple', 'banana', 'strawberry', 'pomegranate', 'mango']
fruits.append('Apple')
print("Original list:", fruits)
fruits.sort()
print("List after sorting alphabetically:", fruits)
fruits.reverse()
print("List after reversing:", fruits)
apple_count = fruits.count('Apple')
print("Number of times 'Apple' appears in the list:", apple_count)

"""Part 2: Tuples

1. Create and Access Elements:

o Create a tuple with 5 numbers: 10, 20, 30, 40, 50.

o Print the first and last number in the tuple.
"""

numbers = (10, 20, 30, 40, 50)
print("Original tuple:", numbers)
print("First number:", numbers[0])
print("Last number:", numbers[-1])

"""2. Immutable Nature of Tuples:

o Try changing the second number in the tuple to 25. Observe and note down the
error message.

"""

numbers = (10, 20, 30, 40, 50)
print("Original tuple:", numbers)
try:
    numbers[1] = 25
except TypeError as e:
    print("Error message:", e)

"""3. Tuple Operations:

o Use tuple unpacking to assign the values of the tuple to 5 different variables. Print each variable.
"""

numbers = (10, 20, 30, 40, 50)
a, b, c, d, e = numbers
print("a =", a)
print("b =", b)
print("c =", c)
print("d =", d)
print("e =", e)

"""Part 3: Dictionaries

1. Create and Access Elements:

o Create a dictionary that stores information about a student:

▪ Name: "John"

▪ Age: 20

▪ Subjects: ["Math", "Physics", "Chemistry"]

o Access the student's age and print it.
"""

student = {
    "Name": "John",
    "Age": 20,
    "Subjects": ["Math", "Physics", "Chemistry"]
}
age = student["Age"]
print("Student's age:", age)

"""2. Modify the Dictionary:

o Add a new key-value pair for "Grade" with the value "A".

o Change the student's age to 21.

o Remove the "Subjects" key from the dictionary.

"""

student = {
    "Name": "John",
    "Age": 20,
    "Subjects": ["Math", "Physics", "Chemistry"]
}
student["Grade"] = "A"
student["Age"] = 21
del student["Subjects"]
print("Modified student dictionary:", student)

"""3. Dictionary Methods:

o Print all the keys in the dictionary.

o Print all the values in the dictionary.
"""

student = {
    "Name": "John",
    "Age": 21,
    "Grade": "A"
}
print("Keys:", student.keys())
print("Values:", student.values())
print("Items:", student.items())